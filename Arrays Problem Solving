#include <iostream>
#include <limits.h>
#include <string>
#include <vector>
using namespace std;


void rotate(vector<int> &nums, int k) {
  int n = nums.size();

  vector<int> ans(n);
  for (int i = 0; i < n; i++) {
    int newindex = (i + k) % n;
    ans[newindex] = nums[i];
  }
  nums = ans;
}

int main() {

  vector<int> arr = {10, 20, 30, 40, 50, 60};
  int k = 2;
  // sortColour(arr);

  rotate(arr, k);
  for (int num : arr) {
    cout << num << " ";
  }

  return 0;
}

// void sortColour(vector<int> &nums) {

//      int n = nums.size();
//   int left = 0, right = n - 1;
// //   int index = 0;
//  for (int index = 0; index <= right;) {
//     if (nums[index] == 0) {
//       swap(nums[index], nums[left]);
//       index++;
//       left++;

//     } else if (nums[index] == 2) {
//       swap(nums[index], nums[right]);
//       right--;
//     } else {
//       index++;
//     }
//   }
// }
//   while (index <= right) {
//     if (nums[index] == 0) {
//       swap(nums[index], nums[left]);
//       left++;
//       index++;
//     } else if (nums[index] == 2) {
//       swap(nums[index], nums[right]);
//       right--;
//     } else {
//       index++;
//     }
//   }




//   int zero = 0;
//   int one = 0;
//   int two = 0;

//   for (int i = 0; i < nums.size(); i++) {
//     if (nums[i] == 0) {
//       zero++;
//     } else if (nums[i] == 1) {
//       one++;
//     } else {
//       two++;
//     }
//   }

//   int index = 0;
//   for (int i = 0; i < zero; i++) {
//     nums[index++] = 0;
//   }
//   for (int i = 0; i < one; i++) {
//     nums[index++] = 1;
//   }
//   for (int i = 0; i < two; i++) {
//     nums[index++] = 2;
//   }
}

int main() {

  vector<int> arr = {2, 0, 2, 1, 1, 0};

  sortColour(arr);
  for (int num : arr) {
    cout << num << " ";
  }

  return 0;
}